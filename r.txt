1 postgres
создать в postgres бд для хранения  данных которые будут распаршены скриптом из п.2
1.1 структура таблиц и кол-во на твое усмотрение
1.2 создать связанную таблицу в которой на каждый домен хранить информацию о температуре, дату время запроса (п.2.3.1)
1.3 создать связанную таблицу в которою на каждый домен хранить информацию о курсе доллара (п.2.3.2), дату время запроса
1.4 при работе с бд использовать хранимые процедуры
1.5 сделать view с выводом информации о домене, курсе доллара и погоде
1.6 сделать тригер одну из таблиц на удаление записи, который запишет в лог пользователя который хотел удалить данные, данные которые удаляются, дату время удаления

2 питон
2.1 распарсить файл dump.xml
2.2 отправить на емаил письмо о времени обработки, кол-ве обработанных объектов, кол-ве уникальных доменнов 1 го уровня(пример e1.ru)
2.3 обогатить распаршенные данные информацией о погоде и курсом доллара и сохранить в бд
2.3.1 сделать запрос с использование api open weather о температуре на момент запроса в Екатеринбуре (город должен быть вынесен в конфиг)
2.3.2 сделать запрос с использование api о курсе доллара на момент includeTime (код вылюты должен быть вынесен в конфиг)
2.3.3 привести поле hash к числу
* по п.2 это может быть 1/2/3/N сервисов на твое усмотрение

3 питон
3.1 создать api на flask/fastapi для получения данных (rest) из п.1
3.1.1 на входе полное имя домена, на выходе !все! связанные с ним данные
3.1.2 на входе hash(валидация на число) домена (из п.2.3.3), на выходе !все! связанные с ним данные

4 дополнительные требования - реализация по желанию
* время работы скрипта из п.2 не должно превышать 30 мин (без учета обращений по апи)
** во время работы скрипта из п.2 потребление оперативной памяти не должно превышать 300мб

5 результаты выложить на github